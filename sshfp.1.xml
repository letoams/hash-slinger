<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id='sshfp1'>
<refentryinfo><date>January 2, 2015</date></refentryinfo>
<refmeta>
<refentrytitle>sshfp</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>January 2, 2015</refmiscinfo>
<refmiscinfo class='source'>Paul Wouters</refmiscinfo>
<refmiscinfo class='manual'>Internet / DNS</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>sshfp</refname>
<refpurpose>Generate SSHFP DNS records from knownhosts files or ssh-keyscan</refpurpose>
</refnamediv>
<!-- body begins here -->

<refsect1 id='syntax'><title>SYNTAX</title>
<para>sshfp [<option>-k</option> &lt;<emphasis remap='I'>knownhosts_file</emphasis>&gt;] [<option>-d</option>] [<option>-a</option>] [<option>-t</option> &lt;algo&gt;] [<option>--digest</option> &lt;digest&gt;] [&lt;<emphasis remap='I'>host1</emphasis>&gt; [<emphasis remap='I'>host2 ...]</emphasis>]</para>
<!-- .br -->
<para>sshfp <option>-s</option> [<option>-p</option> &lt;<emphasis remap='I'>port</emphasis>&gt;] [<option>-d</option>] [<option>-a</option>] [<option>-t</option> &lt;algo&gt;] [<option>--digest</option> &lt;digest&gt;] [<option>-n</option> &lt;<emphasis remap='I'>nameserver</emphasis>&gt;] &lt;<emphasis remap='I'>domain1</emphasis>&gt; [<emphasis remap='I'>domain2</emphasis>] &lt;<emphasis remap='I'>host1</emphasis>&gt; [<emphasis remap='I'>host2 ...</emphasis>]</para>
</refsect1>

<refsect1 id='description'><title>DESCRIPTION</title>
<para>sshfp generates RFC-4255 SSHFP DNS records based on the public keys
stored in a known_hosts file, which implies the user has
previously trusted this key, or public keys can be obtained
by using ssh-keyscan (1). Using ssh-keyscan (1) implies a secure path to connect to the hosts being scanned.
It also implies a trust in the DNS to obtain the IP address of
the hostname to be scanned. If the nameserver of the domain allows zone transfers (AXFR), an entire domain can be processed for all its A records.</para>
</refsect1>

<refsect1 id='options'><title>OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-s / --scan</option> &lt;<emphasis remap='I'>hostname1</emphasis>&gt; [hostname2 ...]</term>
  <listitem>
<para>Scan hosts or domain for public SSH keys using ssh-keyscan.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-k / --knownhosts &lt;</option><emphasis remap='I'>knownhosts_file</emphasis><emphasis remap='P->B'>&gt; &lt;</emphasis><emphasis remap='I'>hostname1</emphasis><emphasis remap='P->B'>&gt; [hostname2 ...]</emphasis></term>
  <listitem>
<para>Obtain public SSH keys from a known_hosts file. Defaults to using ~/.ssh/known_hosts.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-a / --all</option></term>
  <listitem>
<para>Scan all hosts in the known_hosts file when used with -k. When used with -s, it will attempt a zone transfer (AXFR) to obtain all A records in the domain specified.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-d / --trailing-dot</option></term>
  <listitem>
<para>Add a trailing dot to the hostname in the SSHFP records.  It is not possible
to determine whether a known_hosts or dns query is for a FQDN (eg www.redhat.com)
or not (eg www) or not (unless -d domainname -a is used, in which case a trailing dot
is always appended). Non-FQDN get their domainname appended through /etc/resolv.conf
These non-FQDN will happen when using a non-FQDN (eg sshfp -k www)
or known_hosts entries obtained by running ssh www.sub where .domain.com is implied.
When -d is used, all hostnames not ending with a dot, that at least contain two parts
in their hostname (eg www.sub but not www get a trailing dot. Note that the output of
sshfp can also just be manually edited for trailing dots.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>--digest</option> &lt;<emphasis remap='I'>digest</emphasis>&gt;</term>
  <listitem>
<para>Fingerprint hash function (may be specified more than once, default sha1,sha256).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-n / --nameserver</option> &lt;<emphasis remap='I'>nameserver</emphasis>&gt;</term>
  <listitem>
<para>Nameserver to use for AXFR (only valid with -s -a).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-o / --output</option> &lt;<emphasis remap='I'>filename</emphasis>&gt;</term>
  <listitem>
<para>Write to filename instead of stdout.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-p / --port</option> &lt;<emphasis remap='I'>portnumber</emphasis>&gt;</term>
  <listitem>
<para>Use portnumber for scanning. Note that portnumbers do NOT appear in SSHFP records.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-h / --help</option></term>
  <listitem>
<para>Output help information and exit.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-T / --timeout</option> &lt;<emphasis remap='I'>seconds</emphasis>&gt;</term>
  <listitem>
<para>Scanning timeout, in seconds (default 5).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-t / --type</option> &lt;<emphasis remap='I'>algo</emphasis>&gt;</term>
  <listitem>
<para>Key type to fetch (may be specified more than once, default rsa,ecdsa,ed25519,dsa,xmss).</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-v / --version</option></term>
  <listitem>
<para>Output version information and exit.</para>
  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-q / --quiet</option></term>
  <listitem>
<para>Output less miscellany to stderr.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 id='files'><title>FILES</title>
<para><filename>~/.ssh/known_hosts</filename></para> 
</refsect1>

<refsect1 id='requirements'><title>REQUIREMENTS</title>
<para>sshfp requires python-dns (<ulink url='http://www.pythondns.org'>http://www.pythondns.org</ulink>)</para>

<para>Fedora: yum install python-dns</para>

<para>Debian: apt-get install python-dnspython</para>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>if a domain contains non-working glue A records, then ssh-keyscan aborts instead of skipping the single broken entry.</para>

<para>This program can look up hashed hostnames in a known_hosts file if a recent-enough ssh-keygen is present</para>
</refsect1>

<refsect1 id='examples'><title>EXAMPLES</title>
<para>typical usage:</para>

<para>sshfp (implies -k -a)</para>

<para>sshfp -a -d (implies -k)</para>

<para>sshfp -k bofh.nohats.ca (from known_hosts)</para>

<para>sshfp -s bofh.nohats.ca (from a scan to the host)</para>

<para>sshfp -k ~paul/.ssh/known_hosts bofh.nohats.ca www.openswan.org -o /tmp/mysshfp.txt</para>

<para>sshfp -a -d -d nohats.ca -n ns0.nohats.ca &gt;&gt; /var/named/primary/nohats.ca</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>ssh-keyscan</refentrytitle><manvolnum>1</manvolnum></citerefentry> <citerefentry><refentrytitle>ssh</refentrytitle><manvolnum>1</manvolnum></citerefentry> <citerefentry><refentrytitle>tlsa</refentrytitle><manvolnum>1</manvolnum></citerefentry> and RFC-4255</para>

</refsect1>

<refsect1 id='authors'><title>AUTHORS</title>
<para>Paul Wouters &lt;pwouters@redhat.com&gt;, Jacob Appelbaum &lt;jacob@appelbaum.net&gt;, James Brown &lt;jbrown@yelp.com&gt;</para>
</refsect1>

<refsect1 id='copyright'><title>COPYRIGHT</title>
<para>Copyright 2006-2010 Xelerance Corporation</para>
<para>Copyright 2012 Paul Wouters</para>

<para>This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.  See &lt;<ulink url='http://www.fsf.org/copyleft/gpl.txt'>http://www.fsf.org/copyleft/gpl.txt</ulink>&gt;.</para>

<para>This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
Public License (file COPYING in the distribution) for more details.</para>
</refsect1>
</refentry>

